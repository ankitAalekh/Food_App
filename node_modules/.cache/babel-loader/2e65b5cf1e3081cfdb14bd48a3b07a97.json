{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arc_reactor\\\\React\\\\Food_App\\\\Food_App\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isSixCharacter = value => value.trim().length === 6;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputref = useRef();\n  const cityInputref = useRef();\n  const postalCodeInputref = useRef();\n  const streetInputref = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputref.current.value;\n    const enteredStreet = streetInputref.current.value;\n    const enteredPostal = postalCodeInputref.current.value;\n    const enteredCity = cityInputref.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = isSixCharacter(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalIsValid,\n      city: enteredCityIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredPostalIsValid && enteredCityIsValid && enteredStreetIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a valid Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a valid Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a valid postalCode(6 characters long!)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter a valid City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"oM9GIhWicmmqMw0UVf0ddoOHrU4=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Arc_reactor/React/Food_App/Food_App/src/Components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isSixCharacter","length","Checkout","props","formInputsValidity","setFormInputValidity","name","street","postalCode","city","nameInputref","cityInputref","postalCodeInputref","streetInputref","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isSixCharacter = (value) => value.trim().length === 6;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n  const nameInputref = useRef();\r\n  const cityInputref = useRef();\r\n  const postalCodeInputref = useRef();\r\n  const streetInputref = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputref.current.value;\r\n    const enteredStreet = streetInputref.current.value;\r\n    const enteredPostal = postalCodeInputref.current.value;\r\n    const enteredCity = cityInputref.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalIsValid = isSixCharacter(enteredPostal);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n\r\n    setFormInputValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      postalCode: enteredPostalIsValid,\r\n      city: enteredCityIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredPostalIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredStreetIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostal,\r\n    });\r\n  };\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity ? \"\" : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputsValidity ? \"\" : classes.invalid\r\n  }`;\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputref} />\r\n        {!formInputsValidity.name && <p>Please Enter a valid Name</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputref} />\r\n        {!formInputsValidity.street && <p>Please Enter a valid Street</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputref} />\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please Enter a valid postalCode(6 characters long!)</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputref} />\r\n        {!formInputsValidity.postalCode && <p>Please Enter a valid City</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}